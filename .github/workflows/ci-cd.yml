name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'serving/**'
      - 'ui/**'
      - '.github/workflows/**'
      - 'README.md'
  workflow_dispatch:

env:
  IMAGE_SERVING: ylou25/serving-api:${{ github.sha }}
  IMAGE_UI:      ylou25/streamlit-ui:${{ github.sha }}
  NAMESPACE:     default

jobs:
  ci-cd:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # -------- Python lint & tests --------
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install deps
        run: |
          pip install -r serving/requirements.txt
          pip install -r ui/requirements.txt
          pip install pytest flake8 black

      - run: flake8 serving ui
      - run: black --check serving ui
      - run: pytest serving/tests
      - run: pytest ui/tests

      # -------- Build & push images --------
      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push serving-api
        uses: docker/build-push-action@v5
        with:
          context: serving
          file: serving/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_SERVING }}
            ylou25/serving-api:latest

      - name: Build & push streamlit-ui
        uses: docker/build-push-action@v5
        with:
          context: ui
          file: ui/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_UI }}
            ylou25/streamlit-ui:latest

      # -------- Auth & get GKE credentials --------
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          project_id:  ${{ secrets.GCP_PROJECT_ID }}
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location:     ${{ secrets.GKE_REGION }}

      # -------- Deploy to GKE --------
      - name: Update serving-api image
        run: |
          kubectl -n $NAMESPACE set image deployment/serving-api \
            serving-container=${{ env.IMAGE_SERVING }}
          kubectl -n $NAMESPACE rollout status deployment/serving-api --timeout=120s

      - name: Update streamlit-ui image
        run: |
          kubectl -n $NAMESPACE set image deployment/streamlit-ui \
            streamlit-container=${{ env.IMAGE_UI }}
          kubectl -n $NAMESPACE rollout status deployment/streamlit-ui --timeout=120s

      # -------- Debug info on failure (optional) --------
      - name: Debug on failure
        if: failure()
        run: |
          kubectl get pods -n $NAMESPACE -o wide || true
          kubectl describe deploy/serving-api -n $NAMESPACE || true
          kubectl describe deploy/streamlit-ui -n $NAMESPACE || true
          kubectl logs -l app=serving-api -n $NAMESPACE --tail=100 || true
          kubectl logs -l app=streamlit-ui -n $NAMESPACE --tail=100 || true
